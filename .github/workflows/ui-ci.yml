name: App UI CI

defaults:
  run:
    working-directory: routing-ui


on:
  push:
    # Run on all branches
    branches:
      - init-ui
    # Run only if files modified are not docs
    paths-ignore:
      - "*.md"
  # pull_request:
  #   # Run on all branches
  #   branches:
  #     - "*"
  #   # Run only if files modified are not docs
  #   paths-ignore:
  #     - "*.md"

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:

  # Build & Test
  buildAndTest:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: 'npm'
          cache-dependency-path: routing-ui/package-lock.json

      # Build
      - name: BUILD
        run: npm build

      # Test
      - name: TEST
        run: npm test

      # Upload dist artifacts
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

      # Upload coverage artifacts
      # - uses: actions/upload-artifact@v2
      #   with:
      #     name: coverage
      #     path: coverage/lcov.info

  # coverage:
  #   name: Coverage analysis
  #   needs: buildAndTest
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #         token: ${{ env.GITHUB_TOKEN }}

  #     # Donwload coverage artifacts
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: coverage

  #     # Update coverage file to codecov
  #     - name: CODECOV
  #       uses: codecov/codecov-action@v1
  #       with:
  #         token: ${{ secrets.CODECOV_TOKEN }}
  #         files: lcov.info

  # Deploy to gh pages
  deploy:
    name: Deploy
    # Deploy only for main branch
    if: github.ref == 'refs/heads/main'
    needs: buildAndTest
    runs-on: ubuntu-latest
    # # Manual deployment
    # # See https://devblogs.microsoft.com/devops/i-need-manual-approvers-for-github-actions-and-i-got-them-now/
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ env.GITHUB_TOKEN }}

      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Download dist artifacts
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      # Deploy dist folder to gh pages
      - name: DEPLOY
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ env.GITHUB_TOKEN }}
          publish_dir: ./dist
          user_name: ${{ secrets.GIT_AUTHOR_NAME }}
          user_email: ${{ secrets.GIT_AUTHOR_EMAIL }}